name: Generate Snake

# Controls when the action will run. This action runs every 6 hours and on manual trigger
on:
  schedule:
    # every 6 hours
    - cron: "0 */6 * * *"
  workflow_dispatch:

# The sequence of runs in this workflow
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks repo under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Generates the snake  
      - uses: Platane/snk@master
        id: snake-gif
        with:
          github_user_name: Ryuuutaaa
          # these next 2 lines generate the files on a branch called "output". This keeps the main branch from cluttering up.
          gif_out_path: dist/github-contribution-grid-snake.gif
          svg_out_path: dist/github-contribution-grid-snake.svg

      # Show the status of the build. Makes it easier for debugging (if there's any issues).
      - run: git status

      # Ensure the output branch exists
      - name: Checkout or Create Output Branch
        run: |
          git fetch origin
          git checkout -B output
          git pull origin output || true

      # Push the changes to the output branch
      - name: Push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Updated snake animation" || echo "No changes to commit"
          git push origin output --force

      # Deploy the snake to GitHub Pages
      - uses: crazy-max/ghaction-github-pages@v2.1.3
        with:
          # the output branch we mentioned above
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
